rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isValidToken() {
      return request.auth.token.auth_time < request.time.toMillis() - 30 * 60 * 1000
        && request.auth.token.exp > request.time.toMillis();
    }

    function isAuthenticated() {
      return request.auth != null && isValidToken();
    }

    function isValidEmail() {
      return request.auth.token.email.matches(".*@ds\\.study\\.iitm\\.ac\\.in$");
    }

    function isAdmin() {
      return request.auth.token.role == 'admin' && isValidEmail();
    }

    match /users/{userId} {
      allow read: if isAuthenticated() && 
        (request.auth.uid == userId || isAdmin());
      allow create: if isAuthenticated() && request.auth.uid == userId && isValidEmail();
      allow update: if isAuthenticated() && request.auth.uid == userId;
      allow delete: if isAdmin();
    }

    match /userActivity/{activityId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
    }

    // Rate limiting
    match /rateLimit/{userId} {
      allow read, write: if false; // Only accessible through Firebase Functions
    }

    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
